<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABILAAASCwAAAAAAAAAA
        AADz4tn/8+LZ//Pi2f/z4tn/8+LZ//Pi2f/z4tn/8uLW//Hg1P/25tv//Ozl///t6P/15tr/69fL/+PK
        wP/gzbz/4sy9/+fQxv/t3tX/+Onh//3t5v/56eH/8eHW//Dg1v/z49n/8+LZ//Pi2f/z4tn/8+LZ//Pi
        2f/z4tn/8+LZ//Xk2//15Nv/9eTb//Pk2//05Nv/9ePc//Tg2f/56eD//fDo/+7d1P/Quq7/qZCA/497
        b/+AdnD/fHt4/3NnZP9+cW3/fnBq/4ZuYv+Re23/tJuN/9/Lvv/67uT/+uzk//Lh2f/15Nn/9OPb//Xk
        2//15Nv/9eTb//Xk2//15Nv/9OXe//fk3//05d7/9Obd//Xl3f/x5Nv//e/n/+bYzP+3m4n/pXlf/4di
        Tf9zfHv/a3yG/2hwc/95fHX/d29l/4CBff9ueX7/anZ8/218g/94W0n/lGdM/6OBbv/bx73//vDp//Tk
        2f/05d3/9eXe//Xl3f/15d7/9eXe//Xl3v/26OH/9efg//jn4P/55uH/8+Pd//zv6v/Os6b/kGNL/5do
        Sf+UZkX/imBL/45zaf+rk4X/wKaS/6+Jgf9+Umb/mnR3/8Wqm/+5ppj/nIh//49pV/+QYUj/elY9/2VG
        Lf/GrqT//vLt//Pj2v/45+D/9ubg//fn4P/45+H/9+fg//jp4//26uL/+eji//jn4f/47OX/+/Lp/595
        ZP+VYkb/m25X/7OVhf/n2M3////u/9zM0v92ZLP/KBys/wYDrf8VDZj/V0eR/8Kzvv////b/+e/n/9K8
        sP+Vd2L/UzQg/5J2Zv/68uz/+Ork//fo4P/56eL/+Onj//jp4//46eP/9+fj//bp4f/35+P/+ezl//Dj
        1/+Ubln/fE41/2o+I/+6opX//////+/g2/91YKP/EAOp/wAAy/8AAN3/AADR/wAAw/8AAKb/AACA/1VA
        ff/dy8n//////7+mm/9OKRf/a0gx/6B8af/16uH/+eri//no4v/26OP/9ufk//fo5P//+PX///bx//3u
        6v///Pb/uZuM/31LM/+HXUf/d04//97Nvv/ItMn/LRqS/wAAv/8AAdz/CAnX/xERz/8RDs7/CwnF/wsK
        tf8LCqr/AACL/yEPY//ArLf/zbaq/3dPOv+Yb1n/hFk6/8Wsn////Pb//e/p///29P//9/X///j2/7+l
        nP/GraL/2cW7/+jc1P/Kr6H/dT8j/7SQgv/46OD/uaG0/xIDnf8UFNP/fX7H/25urf9lZqP/i4um/4aI
        qP9ucKD/hoSv/6KjvP9pa6v/AACT/xICYf+8pq3/8+Da/6qFdP91RS7/2cC1/+jY0v/Yw7j/xKqg/8Gl
        nP++ppn/iGBN/62MfP+hdWX/mm5W/97Dtv+tioL/PyMT/04/VP8TA6b/AADj/wkKyv/Av97/8vDm/9ja
        1P/o6OT/4eDd/+Tk3//z9/T////5/4qJqP8MCqH/AAGa/xYIY/9vPkD/dTwv/7+ekf/OsKP/mGZQ/6J9
        av+nhXX/gVRB/3dJN/+/mIf/kWla/51xYf+HUjT/dkwz/7ePgP9aTkT/RK/J/x5o4f8BANf/AADg/3l+
        3P/////////////////w7vH///////3////+/v//o6C3/xMWr/8AAJ3/KHC//16Vlv9/RjH/rINw/4FR
        Nf+gc1v/lWNU/6V/cP+qhXT/hFdE/7yciP+aZ1T/vpaH/9Oun/+LXkX/VyUJ/1d3dP9S/v//Tvn//zeg
        6/8IF9z/RTnT//v9/P////7//fz+/+zs6v/4+vj/+/v9///+//++v8D/FRG1/xQ9xf9b8///Xvz//2Za
        Sf+BSCz/qXxo/86rnP+bZVH/roRu/6aBcP+FWUP/onto/8ukkv+ebVP/nmpR/9axof/CnIn/hmhV/3eP
        hf9atrv/TvL4/0PO+/8kSc3/trHk//j5/f//////9PXy//Py8//////////+/7e01v8RGbv/Q770/1b6
        //9bpKn/hGFR/9y6qP+yiHL/k1o9/7KEcv/AoJD/lmZT/49gS/+SZlH/vJuL/9e3q/+rdl7/r4Nv/8yp
        mf+pgWf/p3lj/6mMdv+Vrqj/WtTX/0ni/f86atT/XVfa/4KE4v92eN//aWja/4eF5P9mZt//NTDe/yJV
        3P9W9///W66z/3BSOv9zTDb/0K+h/5BdR/+semX/yaqb/66Id/+RZE3/kmRN/5tqUv+vh3H/xpqL/7aG
        c//Yuar/tY18/7WYg/+3mof/0bmp/7iUgP+ejH7/aby8/0zm/f85ceX/SD/u/0dJ8v9CRfP/ODrw/zc4
        8v8qJOz/NJzs/13p7v+bmZD/pod0/3NNOP+vhXT/17ux/5ttWv/AmYj/pnpm/5lpUf+XZk//nm9X/6F1
        Xv+2jnf/yrGc/9i4qv+3iXj/xqyc/9G7q/+0l4f/t5qL/7yej//Ir6P/gMK8/03f9v9MfOX/XFbx/1hY
        9P9RUfP/SUr1/zk55f8+wvz/Zbix/51zWv+ojXb/ooVx/6B9a//ewrH/waCK/66Hcv+fcVv/nmxU/5ho
        T/+jcFn/pXhf/6N5Yv+7mIL/yKSU/7qUfv/ayb3/xKud/7mejP++pJT/1MO1/8q2qf+7nI7/e7W0/0nW
        8v9Ncub/X1n0/1dX8v9MTvP/O0rh/0jN8/+Jtan/upB8/5t2Xf+LYkr/lWhT/9SwnP+rgWv/qnpj/6J2
        Xf+fcFX/nWtR/6V0Wf+pe2H/rX1m/8ilj//En43/xqiX/9nGuv/FrZ7/waeV/9bDuP/Muaz/wamY/8Ws
        nP/Gq5//h83K/0fH8f9UZ+b/X1zz/1RP9P86VOX/Tcro/4iUhf+2k3//vKKP/6mMdv+LVz//066b/7SP
        d/+ufGP/p3le/6NyWP+hbVP/qXdc/6x9Yv+vgGb/0KuX/7+Xgv/PuK7/zrms/8m0o//TvrP/18S6/8aw
        oP/Hs6b/zr6y/9zNxP/CrKH/cMXH/0Wt7P9YW+j/WVT0/zxW5/9MxOP/kYZ1/5pxWf+VcFf/ro95/7CE
        cP/Oqpb/vJV9/65+ZP+rel//pnVZ/6RxVf+seV7/r4Bl/7GDaf/Urpn/vpWB/9W/s//Fs6b/zbmr/+LS
        yP/OuK7/0bms/9HDuP/h0Mn/yLWu/8mzpP+zp5r/Y9Hc/0OL6f9bTPH/P1Xo/0zB3v+pqpj/upyK/6N+
        aP+LYUf/kF9E/86qlf/CnIX/r4Bm/659Yf+peFv/qHNX/7B8YP+zg2b/tYds/9Swm//DmYf/2MCy/8Ww
        o//Uwrj/4tTK/8+/s/++uLH/5dfQ/9TEtf/Mu63/y7eu/9/Ivv+ktqz/S8Pg/0dg5v9AS+r/RrXd/42F
        b/+pgm3/uZiH/66Vfv+HTzb/x52I/8eji/+ygmf/soBj/617Xf+sd1n/tIBi/7iGaP+5jG//1bKc/8Wb
        i//YwrP/ybGj/9vLwP/g0Mj/08i9/67Ky//Z0s7/1MS6/82/tP/bz8f/ybar/8Cejv99san/QaLo/zI8
        4v9FquD/naKR/6uEcf+MZ07/on9n/6+Fb//Dm4n/zKaO/7WFaf+3hGX/sn9f/7F7XP+3hGT/vIhq/7yP
        cv/WtKD/yaCQ/9nHuf/OuKv/4NPH/+PRyP/bzcX/odjc/8bMxv/Zwrn/3s/G/9HBtv/Bq53/wama/8S0
        pv92x9L/KVvf/zqQ3f+Fmor/sIl1/7ici/+ZcVz/hlQ3/8mgjv/RqZH/uIls/7qHaP+2gWL/tH1f/7yG
        Zv++jGz/v5Jz/9q3ov/NpJH/4My+/9W+sP/l1sv/5tXJ/9PNyP+l5u//uNDL/9nGuP/k08n/zbiq/8mw
        of/Xw7n/0bSl/6Olk/9Uodz/M37b/36gn/+fd17/jWhO/7OSf/+ValH/uo14/9qxmP+8i2z/uotp/7uE
        Zf+4gWH/vYhq/8GNbv/Dk3X/3bik/9Glkv/g0MT/2MW2/+fUyv/U1tH/veHm/6/z//+t5+7/xNDK/+LO
        w//SuKb/2cG0/93DuP/ApZH/1bWk/5zBwv9Jmt7/eaWp/7KLcf+xlID/hFxA/511W//Ioo3/16+V/76N
        bv++jWz/vodm/7uFYv/FjWz/yJBw/8eVdf/eu6P/1amR/+POwv/lzMD/6tHE/+ze0//Y1Mn/x+vu/83Y
        1f/m1M3/5dHH/9e5qf/izcL/0rin/9S6qf/ewrH/tJ2J/3LA1/95rbj/mG9V/5dwW/+wjnr/eEEl/8CT
        fP/dtJn/w49v/8WQbv/Fimn/wolm/8SYhf/JnY7/xaGQ/9rBtP/Zrpz/4ci4/+vXy//mzL7/8uLY/+nT
        xf/d2tj/59LI/+nVyP/s29D/3r6t/+jPv//WuKf/48a2/9Kxnv/RrJn/p8bA/4rT2f+8qpf/mm1R/6SB
        af+PYUf/rYJu/+LAs//Fm4v/xJuK/8aai/+/k4T/7OPe/+jc2f/y497/7uTc/963o//gw7H/8NvR/+jR
        v//w2sz/8dzP/+rZy//w3tH/6M+7//Lf0//kyrv/5dDA/9q9qv/fxrH/2Lak/+HBrv+4oov/lcvM/6KY
        iv++knj/oXZb/593Yv+tiHL/+O/p/+3f2f/n3tf/7OHf/+nd2//p3tn/7uPf/+ze2f/x6N7/4LOd/+O8
        pf/nyrj/6s++/+XMvP/r1MP/6cq5//Dayv/szr3/7tjK/+zXy//ly7v/6M+//9e4pf/gwKn/1a+Z/9Kk
        jf+1rqH/vKqc/8mgiP+5kHb/rHtm/7OCaf/+8ev/6NzV/+/j3f/r39v/7uLe//Ln4v/s4dz/8ebh/+3j
        3P/t2Mr/8uLV//Tn3P/2597/9urg//Tm2//y49r/8d3S/+vPvP/kwq7/8drJ/+jMvP/pzbz/3rmn/+LD
        sv/q1cj/8+TY//jn2f/26uD/9ejj//jo3//t2s3/59PI//Lm3//w5d//7eLd//Hl4f/u4t7/7uPf//Do
        5P/s49//9efk//Po4//06uT/7+Tf//Hm4f/u493/8+bg//Ll3//36uX/9+zi//Le0f/lyLj/5sq0/9/A
        rv/z5dj/9e3m//Tr5v/w5+D/9Obg/+zk3v/r597/8eXe//Lq5f/06ef/8ebh/+/k4P/y5+P/7+Xh//Dm
        4v/z6uX/7ubj//Tp5v/x5uH/8ejl/+7l4v/y6eX/7+bh//Lp5P/v5eH/8eji/+zm3f/y5+L/8+zm//bq
        4//t2M3/+O3k//bq5P/y5uD/8uTf//Pn4//u5uP/9Ojj//Lm4f/z6OP/7+fg//Ho4v/w5uP/8unl//Dn
        4//x6eX/8ejk//Do4v/26+n/8ujl//Hu5v/x6eP/9Ozm//Dn4//06+b/8ejj//Tr5//y6OP/8+vm/+/o
        4//z6uP/8ujh//fu6f/y6OH/8enl//Do5f/06+X/8+jj//Tq5v/u6eP/8uvn//Po5f/z6+f/8erk//Xr
        5//y6eX/9Ovn//Lp5f/06+f/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>